name: Release to PyPI

# Trigger on new tags that look like version numbers
on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  # ============================================================================
  # RELEASE BUILD AND PUBLISH
  # ============================================================================
  release:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    environment: release  # GitHub environment for secrets

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest

    - name: Configure Poetry for PyPI
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

    - name: Install dependencies
      run: |
        poetry install

    - name: Run full test suite
      run: |
        poetry run pytest --cov=src --cov-report=term-missing -v

    - name: Build package
      run: |
        poetry build

    - name: Check package
      run: |
        poetry run pip install twine
        poetry run twine check dist/*

    - name: Publish to PyPI
      run: |
        poetry publish

    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-dist
        path: dist/

  # ============================================================================
  # UPDATE DOCUMENTATION ON RELEASE
  # ============================================================================
  docs-deploy:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install dependencies
      run: |
        poetry install --with=docs

    - name: Build documentation
      run: |
        poetry run sphinx-build -b html docs/source docs/build/html

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/build/html
